# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1]
  # Random tests (seed n d rho)
  1 ; generator.py 1 100 1 1
  1 ; generator.py 2 100 2 1
  1 ; generator.py 3 100 5 1
  1 ; generator.py 4 100 10 1
  1 ; generator.py 5 100 100 1


[Subtask 2]
  # Use sample data as test
  1 ; copy statement/sample-1.in
  1 ; copy statement/sample-2.in

  # Random tests (seed n d rho)
  2 ; generator.py 1 100 5 0.3
  2 ; generator.py 2 100 5 0.3
  2 ; generator.py 3 100 5 0.3
  2 ; generator.py 4 100 5 0.3
  2 ; generator.py 5 100 5 0.3
  2 ; generator.py 6 100 5 0.3
  2 ; generator.py 7 100 5 0.3
  2 ; generator.py 8 100 5 0.3
  2 ; generator.py 9 100 5 0.3
  2 ; generator.py 0 100 5 0.3

