# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1]
  # No snek
  no_snek ; gen_random.py 5 5 0 7 1
  no_snek ; gen_random.py 10 10 0 25 1
  no_snek ; gen_random.py 100 100 0 100 1
  no_snek_angosto ; gen_random.py 1000 2 0 100 1
  no_snek_angost ; gen_random.py 1000 1 0 100 1

[Subtask 2]
  # T*N*M < 10^6
  sample ; copy statement/sample-1.in
  sample ; copy statement/sample-2.in
  smol ; gen_random.py 50 50 50 50 0
  smol_escalas ; gen_random.py 50 50 50 50 2
  smol ; gen_random.py 100 100 100 100 0
  smol_escalas ; gen_random.py 100 100 100 100 2
  smol_angosto ; gen_random.py 1000 4 100 100 0
  smol_angosto_escalas ; gen_random.py 1000 4 100 100 2
  smol_angosto ; gen_random.py 1000 1 100 100 0
  smol_angosto_escalas ; gen_random.py 1000 1 100 100 2

  # More random tests
  big ; gen_random.py 1000 1000 5000 1000 0
  big_escalas ; gen_random.py 1000 1000 1000 1000 2
  big ; gen_random.py 987 789 5000 5000 0
  big_escalas ; gen_random.py 987 789 5000 5000 2
  big_angosto ; gen_random.py 1000000 4 5000 1000 0
  big_angosto_escalas ; gen_random.py 1000000 4 5000 1000 2
  big_angosto ; gen_random.py 1000000 2 5000 1000 0
  big_angosto_escalas ; gen_random.py 1000000 2 5000 1000 2
  big_angosto ; gen_random.py 1000000 1 5000 1000 0
  big_angosto_escalas ; gen_random.py 1000000 1 5000 1000 2
